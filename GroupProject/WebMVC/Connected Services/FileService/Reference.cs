//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebMVC.FileService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IWCFFileService")]
    public interface IWCFFileService {
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFFileService/UploadFile", ReplyAction="http://tempuri.org/IWCFFileService/UploadFileResponse")]
        WebMVC.FileService.UploadFileResponse UploadFile(WebMVC.FileService.FileData request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFFileService/UploadFile", ReplyAction="http://tempuri.org/IWCFFileService/UploadFileResponse")]
        System.Threading.Tasks.Task<WebMVC.FileService.UploadFileResponse> UploadFileAsync(WebMVC.FileService.FileData request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileData {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream Stream;
        
        public FileData() {
        }
        
        public FileData(string fileName, System.IO.Stream Stream) {
            this.fileName = fileName;
            this.Stream = Stream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFFileServiceChannel : WebMVC.FileService.IWCFFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFFileServiceClient : System.ServiceModel.ClientBase<WebMVC.FileService.IWCFFileService>, WebMVC.FileService.IWCFFileService {
        
        public WCFFileServiceClient() {
        }
        
        public WCFFileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFFileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFFileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFFileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebMVC.FileService.UploadFileResponse WebMVC.FileService.IWCFFileService.UploadFile(WebMVC.FileService.FileData request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string fileName, System.IO.Stream Stream) {
            WebMVC.FileService.FileData inValue = new WebMVC.FileService.FileData();
            inValue.fileName = fileName;
            inValue.Stream = Stream;
            WebMVC.FileService.UploadFileResponse retVal = ((WebMVC.FileService.IWCFFileService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebMVC.FileService.UploadFileResponse> WebMVC.FileService.IWCFFileService.UploadFileAsync(WebMVC.FileService.FileData request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebMVC.FileService.UploadFileResponse> UploadFileAsync(string fileName, System.IO.Stream Stream) {
            WebMVC.FileService.FileData inValue = new WebMVC.FileService.FileData();
            inValue.fileName = fileName;
            inValue.Stream = Stream;
            return ((WebMVC.FileService.IWCFFileService)(this)).UploadFileAsync(inValue);
        }
    }
}
